import { call, delay, put, takeLatest } from 'redux-saga/effects';
import { httpPaths } from '~/constants';
import { http } from '~/services';
import { cookies } from '~/utils';
import { signInFailed, signInRequest, signInSuccess } from './authSlice';

function* handleSignIn(action) {
  try {
    const { data } = yield call(http.POST, httpPaths.signIn, action.payload);
    yield delay(500);

    cookies.addCookie('auth', JSON.stringify(data));
    yield put(signInSuccess(data));
  } catch (error) {
    const message =
      'TÃªn tÃ i khoáº£n cá»§a báº¡n hoáº·c Máº­t kháº©u khÃ´ng Ä‘Ãºng, vui lÃ²ng thá»­ láº¡i.';

    yield put(signInFailed(message));
  }
}

function* authSaga() {
  console.log('[SAGA] - Auth is running. ðŸ’¥ðŸ’¥ðŸ’¥');
  yield takeLatest(signInRequest().type, handleSignIn);
}

export default authSaga;
